class Solution {
    int low;
    int maxLen;
    public String longestPalindrome(String s) {
        //thought: subproblem is to find the longest palindormic substring from every index
        if (s.length() < 2) {
            return s;
        }
        //for expand evenly from tow ends, we need to divide into odd condition and even condidtion
        for (int i = 0; i < s.length();i++){
            extend(s, i, i);
            extend(s,i, i+1);
        }
       return s.substring(low, low + maxLen);

    }
    
    private void extend(String s, int j, int k) {
        while (j >= 0 && k < s.length() && s.charAt(j) == s.charAt(k)) {
            j--;
            k++;
        }

        if (maxLen < k - j - 1) {
            low = j + 1;
            maxLen = k - j - 1;
        }
    }
}
