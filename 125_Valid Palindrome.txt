    class Solution {
   public static boolean isPalindrome(String s) {
	        
	        if( s == null || s.length() == 1) return true;
	        
	        String newS = s.replaceAll("\\pP" , "").replace(" ", "").replace("`", "").toLowerCase(); 
	    
	        
	        int i = 0;
	        int j = newS.length() - 1;
	        while(i < j){
	            if(newS.charAt(i) != newS.charAt(j)) return false;
	            i++;
	            j--;
	        }
	        
	        return true;
	    }
	}
	
   // Seconde method:
	public boolean isPalindrome(String s) {
        if (s.isEmpty()) {
        	return true;
        }
        
        int head = 0;
        int tail = s.length() - 1;
        
        char cHead;
        char cTail;
        
        while(head <= tail) {
        	cHead = s.charAt(head);
        	cTail = s.charAt(tail);
            
            // 去除标点符号
        	if (!Character.isLetterOrDigit(cHead)) {
        		head++;
        	} else if(!Character.isLetterOrDigit(cTail)) {
        		tail--;
        	} else {
        		if (Character.toLowerCase(cHead) != Character.toLowerCase(cTail)) {
        			return false;
        		}
                
        		head++;
        		tail--;
        	}
        }
        
        return true;
    }
}