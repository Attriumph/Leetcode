class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
      if (nums == null) {
          return null;
      }  

      List<List<Integer>> res = new ArrayList<>();
      Arrays.sort(nums);

      for (int i = 0; i < nums.length - 1; i++) {
          // pick the fist element
          if ( i == 0 || (i > 0 && nums[i] != nums[i - 1])) {
              int beg = i + 1;
              int end = nums.length - 1;
              int sum = 0 - nums[i];

              // find if there are other two elements could be add to sum by using two pointers
              while (beg < end) {
                  if (nums[beg] + nums[end] == sum) {
                      res.add(Arrays.asList(nums[i], nums[beg], nums[end]));
                      while (beg < end && nums[beg] == nums[beg + 1]) {
                          beg++;
                      }
                      while (beg < end && nums[end] == nums[end - 1]) {
                          end--;
                      }
                      beg++;
                      end--;
                  } else if (nums[beg] + nums[end] < sum) {
                      beg++;
                  } else {
                      end--;
                  }
              }
          }
      }

      return res;
    }

}
