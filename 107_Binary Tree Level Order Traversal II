class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
       Queue<TreeNode> q = new LinkedList<>();
       List<List<Integer>> res = new ArrayList<>();

        if(root == null) return res;
        q.offer(root);

        while(!q.isEmpty()){
            int size = q.size();
            List<Integer> list = new ArrayList<>();
            for(int i = 0; i< size;i++){
                TreeNode node = q.poll();
                list.add(node.val);
                if(node.left != null) q.offer(node.left);
                if(node.right != null) q.offer(node.right);
            }

            res.add(list);
        }

        int end = res.size() - 1;
        int start = 0;
        while(start < end){
            List<Integer> temp = res.get(start);
            res.set(start,res.get(end));
            res.set(end,temp);
            start++;
            end--;
        }

        return res;
    }
}
