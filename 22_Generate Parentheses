class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> res = new ArrayList<>();
        if (n < 0) {
            throw new IllegalArgumentException("n should be >= 0!");
        }

        helper(res, new String(), n, 0);
        return res;
    }

    private void helper(List<String> res, String str, int n, int difference){
        if (difference == 0 && str.length() == 2 * n) {
            res.add(new String(str));
            return;
        }

        if (difference < 0 || difference > n || str.length() > 2 * n ) {
            return;
        }

        if (difference > 0 && difference < n) {
            helper(res, str + ")", n, difference - 1);
            helper(res, str + "(", n, difference + 1);

        } else if (difference == 0) {
            helper(res, str + "(", n, difference + 1);
        } else {
            helper(res, str + ")", n, difference - 1);
        }
        return;
    }
}
