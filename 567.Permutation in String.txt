class Solution {
    public boolean checkInclusion(String s1, String s2) {
        int[] map = new int[26];
        int len1 = s1.length();
        int len2 = s2.length();

        if (len1 > len2) {
            return false;
        }

        for (int i = 0; i < len1; i++) {
            map[s1.charAt(i) - 'a']++;
        }

        for (int i = 0; i < len2; i++) {
            if ( i - len1 >= 0) {
                map[s2.charAt(i - len1) - 'a']++;
            }

            map[s2.charAt(i) - 'a']--;
            if (allZero(map)) {
                return true;
            }
        }

      return false;
  }

    private boolean allZero(int[] map) {
        for (int count : map) {
            if (count != 0) {
               return false;
            }
        }
        return true;
    }
}

// int len1 = s1.length();
//         int len2 = s2.length();
//         Map<Character, Integer> map = new HashMap<>();

//         if (len1 > len2) {
//             return false;
//         }

//         char[] arr2 = s2.toCharArray();

//         for (char chr : s1.toCharArray()) {
//             map.put(chr, map.getOrDefault(chr, 0) + 1);
//         }

//         int start = 0;
//         for (int i = 0; i < arr2.length; i++) {
//             if (map.containsKey(arr2[i])) {
//                 start = i;
//                 break;
//             }
//         }

//         for (int i = start; i < arr2.length; i++) {
//             if (notAll0(map) && !map.containsKey(arr2[i])) {
//                 return false;
//             }
//             if (map.containsKey(arr2[i])) {
//              map.put(arr2[i], map.get(arr2[i]) - 1);
//             }
//         }

//         return !notAll0(map);
//     }

//     private boolean notAll0(Map<Character, Integer> map) {
//        Iterator<Integer> iter = map.values().iterator();
//         while (iter.hasNext()) {
//             if (iter.next() > 0) {
//                 return true;
//             }
//         }

//         return false;
