class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        if (nums == null || nums.length == 0) {
            return res;
        }
        Arrays.sort(nums);
        helper(res, new ArrayList<Integer>(), nums, 0);
        return res;
    }

    private void helper(List<List<Integer>> res, ArrayList<Integer> path, int[] nums, int pos) {
        res.add(new ArrayList<Integer>(path));

        if (path.size() == nums.length) {
            return;
        }

        for (int i = pos; i < nums.length; i++) {
            if (i != pos && nums[i] == nums[i - 1]) {
                continue;
            }

            path.add(nums[i]);
            helper(res, path, nums, i + 1);
            path.remove(path.size() - 1);
        }

        return;
    }
}
